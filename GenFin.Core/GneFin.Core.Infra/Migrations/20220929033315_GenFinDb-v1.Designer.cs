// <auto-generated />
using System;
using GenFin.Core.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GenFin.Core.Infra.Migrations
{
    [DbContext(typeof(GenFinContext))]
    [Migration("20220929033315_GenFinDb-v1")]
    partial class GenFinDbv1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdBill");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BillDueDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeactivationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeactivationDate");

                    b.Property<int>("IdCreditCard")
                        .HasColumnType("int");

                    b.Property<int>("IdPaymentSource")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdateDate");

                    b.Property<decimal>("PaidValue")
                        .HasColumnType("money");

                    b.Property<byte>("PaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationColumn");

                    b.HasKey("Id");

                    b.HasIndex("IdCreditCard");

                    b.HasIndex("IdPaymentSource");

                    b.ToTable("Bill", (string)null);
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.BillItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdBillItem");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DeactivationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeactivationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Establishment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IdBill")
                        .HasColumnType("int");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdCostCenter")
                        .HasColumnType("int");

                    b.Property<int>("Installment")
                        .HasColumnType("int");

                    b.Property<byte>("Kind")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdateDate");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationColumn");

                    b.Property<int>("TotalInstallment")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("IdBill");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdCostCenter");

                    b.ToTable("BillItem", (string)null);
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCategory");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DeactivationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeactivationDate");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdateDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationColumn");

                    b.Property<bool>("ShowInCalendar")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.CostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCostCenter");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DeactivationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeactivationDate");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdateDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationColumn");

                    b.HasKey("Id");

                    b.ToTable("CostCenter", (string)null);
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPaymentSource");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DeactivationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeactivationDate");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdateDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationColumn");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethod", (string)null);
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.RecurringAdjust", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRecurringAdjust");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeactivationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeactivationDate");

                    b.Property<int>("IdRecurringTransaction")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdateDate");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal (18,4)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationColumn");

                    b.HasKey("Id");

                    b.HasIndex("IdRecurringTransaction");

                    b.ToTable("RecurringAdjust", (string)null);
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.RecurringTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRecurringTransaction");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeactivationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeactivationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Establishment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdCostCenter")
                        .HasColumnType("int");

                    b.Property<int>("IdPaymentMethod")
                        .HasColumnType("int");

                    b.Property<byte>("Kind")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdateDate");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationColumn");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Value")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdCostCenter");

                    b.HasIndex("IdPaymentMethod");

                    b.ToTable("RecurringTransaction", (string)null);
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdTransaction");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DeactivationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeactivationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Establishment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdCostCenter")
                        .HasColumnType("int");

                    b.Property<int>("IdPaymentSource")
                        .HasColumnType("int");

                    b.Property<int>("Installment")
                        .HasColumnType("int");

                    b.Property<byte>("Kind")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastUpdateDate");

                    b.Property<byte>("PaymentStatus")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationColumn");

                    b.Property<int>("TotalInstallment")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdCostCenter");

                    b.HasIndex("IdPaymentSource");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.CreditCard", b =>
                {
                    b.HasBaseType("GenFin.Core.Dominio.Entities.PaymentMethod");

                    b.Property<byte>("BestDayToBuy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("money");

                    b.Property<byte>("DueDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.ToTable("CreditCard", (string)null);
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.PaymentSource", b =>
                {
                    b.HasBaseType("GenFin.Core.Dominio.Entities.PaymentMethod");

                    b.Property<bool>("IncludeInBalance")
                        .HasColumnType("bit");

                    b.ToTable("PaymentSource", (string)null);
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.Bill", b =>
                {
                    b.HasOne("GenFin.Core.Dominio.Entities.CreditCard", "CreditCard")
                        .WithMany("Bills")
                        .HasForeignKey("IdCreditCard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenFin.Core.Dominio.Entities.PaymentSource", "PaymentSource")
                        .WithMany("PaidBills")
                        .HasForeignKey("IdPaymentSource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditCard");

                    b.Navigation("PaymentSource");
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.BillItem", b =>
                {
                    b.HasOne("GenFin.Core.Dominio.Entities.Bill", "Bill")
                        .WithMany("BillItems")
                        .HasForeignKey("IdBill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenFin.Core.Dominio.Entities.Category", "Category")
                        .WithMany("BillItems")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenFin.Core.Dominio.Entities.CostCenter", "CostCenter")
                        .WithMany("BillItems")
                        .HasForeignKey("IdCostCenter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Category");

                    b.Navigation("CostCenter");
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.RecurringAdjust", b =>
                {
                    b.HasOne("GenFin.Core.Dominio.Entities.RecurringTransaction", "RecurringTransaction")
                        .WithMany("Adjusts")
                        .HasForeignKey("IdRecurringTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecurringTransaction");
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.RecurringTransaction", b =>
                {
                    b.HasOne("GenFin.Core.Dominio.Entities.Category", "Category")
                        .WithMany("RecurringTransactions")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenFin.Core.Dominio.Entities.CostCenter", "CostCenter")
                        .WithMany("RecurringTransactions")
                        .HasForeignKey("IdCostCenter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenFin.Core.Dominio.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany("RecurringTransactions")
                        .HasForeignKey("IdPaymentMethod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("CostCenter");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.Transaction", b =>
                {
                    b.HasOne("GenFin.Core.Dominio.Entities.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenFin.Core.Dominio.Entities.CostCenter", "CostCenter")
                        .WithMany("Transactions")
                        .HasForeignKey("IdCostCenter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenFin.Core.Dominio.Entities.PaymentSource", "PaymentSource")
                        .WithMany("Transactions")
                        .HasForeignKey("IdPaymentSource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("CostCenter");

                    b.Navigation("PaymentSource");
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.CreditCard", b =>
                {
                    b.HasOne("GenFin.Core.Dominio.Entities.PaymentMethod", null)
                        .WithOne()
                        .HasForeignKey("GenFin.Core.Dominio.Entities.CreditCard", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.PaymentSource", b =>
                {
                    b.HasOne("GenFin.Core.Dominio.Entities.PaymentMethod", null)
                        .WithOne()
                        .HasForeignKey("GenFin.Core.Dominio.Entities.PaymentSource", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.Bill", b =>
                {
                    b.Navigation("BillItems");
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.Category", b =>
                {
                    b.Navigation("BillItems");

                    b.Navigation("RecurringTransactions");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.CostCenter", b =>
                {
                    b.Navigation("BillItems");

                    b.Navigation("RecurringTransactions");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.PaymentMethod", b =>
                {
                    b.Navigation("RecurringTransactions");
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.RecurringTransaction", b =>
                {
                    b.Navigation("Adjusts");
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.CreditCard", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("GenFin.Core.Dominio.Entities.PaymentSource", b =>
                {
                    b.Navigation("PaidBills");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
